From c84645e7f8849c9661ab3032169e35df04a27663 Mon Sep 17 00:00:00 2001
From: programminghoch10 <16062290+programminghoch10@users.noreply.github.com>
Date: Mon, 29 May 2023 15:33:36 +0200
Subject: [PATCH] Load classes in dex mode

Required for loading patches on android
---
 .../app/revanced/cli/command/MainCommand.kt   | 20 ++++++++++++++++---
 1 file changed, 17 insertions(+), 3 deletions(-)

diff --git a/src/main/kotlin/app/revanced/cli/command/MainCommand.kt b/src/main/kotlin/app/revanced/cli/command/MainCommand.kt
index 0d3b954..95e1cfe 100644
--- a/src/main/kotlin/app/revanced/cli/command/MainCommand.kt
+++ b/src/main/kotlin/app/revanced/cli/command/MainCommand.kt
@@ -139,7 +139,7 @@ internal object MainCommand : Runnable {
         val outputFile = File(pArgs.outputPath) // the file to write to
 
         val allPatches = args.patchArgs!!.patchBundles.flatMap { bundle ->
-            PatchBundle.Jar(bundle).loadPatches()
+            loadPatches(bundle)
         }
 
         args.patchArgs!!.optionsFile.let {
@@ -206,6 +206,21 @@ internal object MainCommand : Runnable {
         logger.info("Finished")
     }
 
+    private fun loadPatches(bundle: String) = try {
+        val DexClassLoaderClass = Class.forName("dalvik.system.DexClassLoader")
+        PatchBundle.Dex(
+            bundle,
+            DexClassLoaderClass.getConstructor(
+                String::class.java,
+                String::class.java,
+                String::class.java,
+                ClassLoader::class.java
+            ).newInstance(bundle, null, null, javaClass.classLoader) as ClassLoader
+        ).loadPatches()
+    } catch (_: ClassNotFoundException) {
+        PatchBundle.Jar(bundle).loadPatches()
+    }
+
     private fun cleanUp(cacheDirectory: String) {
         val result = if (File(cacheDirectory).deleteRecursively())
             "Cleaned up cache directory"
@@ -228,8 +243,7 @@ internal object MainCommand : Runnable {
 
     private fun printListOfPatches() {
         val logged = mutableListOf<String>()
-        for (patchBundlePath in args.patchArgs?.patchBundles!!) for (patch in PatchBundle.Jar(patchBundlePath)
-            .loadPatches()) {
+        for (patchBundlePath in args.patchArgs?.patchBundles!!) for (patch in loadPatches(patchBundlePath)) {
             if (patch.patchName in logged) continue
             for (compatiblePackage in patch.compatiblePackages ?: continue) {
                 val packageEntryStr = buildString {
-- 
2.39.2

